package main

import (
	"bytes"
	"compress/flate"
	"fmt"
	"io"
)

func main() {
	ddest := bytes.NewBuffer(nil)
	var decompressor io.ReadCloser
	//src := []byte{132, 81, 219, 106, 132, 48, 16, 253, 151, 121, 14, 197, 24, 111, 248, 216, 244, 11, 90, 223, 138, 148, 96, 82, 42, 68, 83, 84, 22, 22, 241, 223, 119, 178, 94, 88, 67, 188, 128, 195, 220, 206, 57, 227, 113, 4, 105, 32, 7, 222, 200, 183, 15, 37, 244, 151, 210, 191, 92, 116, 242, 211, 152, 6, 123, 63, 239, 157, 4, 2, 82, 12, 2, 242, 17, 234, 118, 80, 221, 77, 232, 162, 110, 20, 228, 1, 129, 214, 12, 117, 133, 233, 247, 8, 21, 162, 184, 22, 125, 191, 85, 152, 80, 124, 8, 101, 54, 68, 54, 80, 26, 18, 26, 210, 176, 156, 200, 241, 78, 134, 85, 86, 78, 37, 121, 110, 20, 247, 127, 20, 96, 43, 192, 35, 97, 247, 83, 164, 77, 240, 141, 49, 143, 118, 236, 236, 98, 188, 27, 161, 58, 115, 148, 227, 19, 229, 215, 195, 29, 88, 114, 6, 155, 77, 32, 27, 129, 99, 199, 54, 94, 156, 240, 122, 229, 181, 41, 189, 86, 245, 210, 237, 155, 62, 230, 204, 150, 127, 162, 149, 252, 240, 43, 150, 255, 23, 209, 96, 189, 206, 117, 126, 182, 119, 122, 4, 0, 0, 255, 255}
	src := []byte{133, 146, 221, 138, 131, 48, 16, 133, 223, 101, 174, 67, 49, 198, 63, 188, 92, 251, 4, 91, 239, 22, 89, 130, 201, 82, 33, 154, 162, 82, 40, 226, 187, 59, 169, 63, 212, 144, 213, 128, 97, 38, 51, 115, 78, 252, 116, 0, 161, 33, 133, 172, 22, 151, 171, 228, 234, 38, 213, 95, 198, 91, 241, 173, 117, 141, 103, 191, 95, 173, 0, 2, 130, 247, 28, 210, 1, 170, 166, 151, 237, 147, 171, 188, 170, 37, 164, 30, 129, 70, 247, 85, 137, 225, 207, 0, 37, 78, 101, 138, 119, 221, 150, 97, 64, 113, 17, 202, 204, 22, 152, 141, 82, 159, 80, 159, 250, 197, 72, 254, 239, 73, 48, 75, 138, 177, 32, 239, 142, 252, 245, 64, 3, 182, 14, 56, 44, 76, 127, 140, 178, 17, 62, 33, 198, 193, 78, 157, 157, 148, 119, 37, 116, 103, 150, 115, 120, 224, 252, 121, 113, 107, 44, 58, 26, 155, 33, 24, 28, 179, 128, 133, 99, 43, 47, 36, 156, 172, 156, 152, 226, 115, 87, 167, 220, 254, 208, 165, 156, 152, 244, 206, 27, 97, 254, 14, 247, 91, 44, 223, 47, 160, 222, 122, 59, 155, 252, 140, 119, 156, 0}
	//src := []byte{120, 156, 133, 81, 217, 10, 131, 48, 16, 252, 151, 125, 14, 197, 24, 47, 124, 108, 250, 5, 173, 111, 69, 74, 48, 41, 21, 162, 41, 42, 133, 34, 254, 123, 215, 122, 80, 37, 218, 64, 150, 61, 103, 54, 147, 22, 164, 129, 24, 120, 33, 15, 39, 37, 244, 69, 233, 59, 23, 149, 60, 27, 83, 96, 238, 118, 172, 36, 16, 144, 162, 17, 16, 183, 144, 151, 141, 170, 94, 66, 39, 121, 161, 32, 118, 8, 148, 166, 201, 51, 116, 175, 45, 100, 56, 197, 181, 168, 235, 57, 66, 135, 226, 33, 148, 245, 198, 235, 13, 165, 46, 161, 46, 117, 211, 142, 108, 247, 68, 24, 69, 105, 151, 146, 111, 71, 242, 126, 34, 1, 155, 6, 44, 20, 125, 127, 136, 176, 1, 94, 31, 125, 111, 129, 206, 254, 148, 23, 37, 100, 103, 43, 102, 127, 135, 249, 119, 241, 213, 88, 176, 55, 54, 136, 64, 102, 128, 149, 28, 115, 121, 84, 194, 170, 149, 85, 166, 240, 63, 171, 21, 110, 153, 180, 33, 71, 125, 248, 16, 165, 228, 155, 175, 24, 255, 207, 163, 206, 180, 221, 90, 249, 65, 222, 238, 3, 145, 16, 174, 117}
	s := make([]byte, 100, 1000)
	decompressor = flate.NewReaderDict(bytes.NewReader(src), s)
	err := decompressor.Close()
	if err != nil {
		fmt.Println("Enflated:error \n", err.Error())
	} else {
		_, err = io.Copy(ddest, decompressor)
	}
	fmt.Println(string(ddest.Bytes()))
}
